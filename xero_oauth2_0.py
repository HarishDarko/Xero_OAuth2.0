# -*- coding: utf-8 -*-
"""Xero_OAuth2.0 

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zwqegaapTUlNNs6rHm9XW_mR4wA1vWE8

# **Implementing OAuth 2.0 using Xero**

![picture](https://developer.xero.com/static/images/documentation/authflow.svg)
"""

import json
import requests
import base64
#create a new app
#copy and paste your client id and client secret below
# Read this document to learn the process: https://developer.xero.com/documentation/oauth2/auth-flow

client_id = input("enter client_id : ")
client_secret =input("client_secret : ")

redirect_url = 'https://developer.xero.com/'
scope = 'offline_access accounting.transactions'
b64_id_secret = base64.b64encode(bytes(client_id + ':' + client_secret, 'utf-8')).decode('utf-8')
#click this link : https://developer.xero.com/documentation/oauth2/scopes to know more about scopes

def XeroFirstAuth():
    # 1. Send a user to authorize your app
    auth_url = ('''https://login.xero.com/identity/connect/authorize?''' +
                '''response_type=code''' +
                '''&client_id=''' + client_id +
                '''&redirect_uri=''' + redirect_url +
                '''&scope=''' + scope +
                '''&state=123''')
    print("Open this URL:\n")
    print(auth_url)

    # 2. Users are redirected back to you with a code
    auth_res_url = input('What is the response URL? ')
    start_number = auth_res_url.find('code=') + len('code=')
    end_number = auth_res_url.find('&scope')
    auth_code = auth_res_url[start_number:end_number]
    print("authentication code :")
    print(auth_code)
    print('\n')
    
    # 3. Exchange the code
    exchange_code_url = 'https://identity.xero.com/connect/token'
    response = requests.post(exchange_code_url, 
                            headers = {
                                'Authorization': 'Basic ' + b64_id_secret
                            },
                            data = {
                                'grant_type': 'authorization_code',
                                'code': auth_code,
                                'redirect_uri': redirect_url
                            })
    json_response = response.json()
    print(json_response)
    print('\n')
    
    # 4. Receive your tokens
    return [json_response['access_token'], json_response['refresh_token']]

# First Time running the script
old_tokens = XeroFirstAuth()

# 5. Check the full set of tenants you've been authorized to access
def XeroTenants(access_token):
    connections_url = 'https://api.xero.com/connections'
    response = requests.get(connections_url,
                           headers = {
                               'Authorization': 'Bearer ' + access_token,
                               'Content-Type': 'application/json'
                           })
    json_response = response.json()
    print(json_response)
    
    for tenants in json_response:
        json_dict = tenants
    return json_dict['tenantId']

XeroTenants(old_tokens[0])

from google.colab import drive
drive.mount('/content/drive')

# 6.1 Refreshing access tokens
def XeroRefreshToken(refresh_token):
    token_refresh_url = 'https://identity.xero.com/connect/token'
    response = requests.post(token_refresh_url,
                            headers = {
                                'Authorization' : 'Basic ' + b64_id_secret,
                                'Content-Type': 'application/x-www-form-urlencoded'
                            },
                            data = {
                                'grant_type' : 'refresh_token',
                                'refresh_token' : refresh_token
                            })
    json_response = response.json()
    print(json_response)
    
    new_refresh_token = json_response['refresh_token']
    rt_file = open('/content/drive/My Drive/data/refresh_token.txt', 'w')
    rt_file.write(new_refresh_token)
    rt_file.close()
    
    return [json_response['access_token'], json_response['refresh_token']]

XeroRefreshToken(old_tokens[1])

# 6.2 Call the API
def XeroRequests():
    old_refresh_token = open('/content/drive/My Drive/data/refresh_token.txt', 'r').read()
    new_tokens = XeroRefreshToken(old_refresh_token)
    xero_tenant_id = XeroTenants(new_tokens[0])
    print(xero_tenant_id)
    get_url = 'https://api.xero.com/api.xro/2.0/Invoices'
    response = requests.get(get_url,
                           headers = {
                               'Authorization': 'Bearer ' + new_tokens[0],
                               'Xero-tenant-id': xero_tenant_id,
                               'Accept': 'application/json'
                           })
    json_response = response.json()
    print(json_response)
    
    xero_output = open('/content/drive/My Drive/data/xero_output.txt', 'w')
    xero_output.write(response.text)
    xero_output.close()

# Every other time
XeroRequests()

def export_csv():
    invoices = open(r'/content/drive/My Drive/data/xero_output.txt', 'r').read()
    json_invoice = json.loads(invoices)
    analysis = open(r'/content/drive/My Drive/data/analysis.csv', 'w')
    analysis.write('InvoiceNumber' + ',' + 'Reference' + ',' + 'Type' + ',' + 'Total')
    analysis.write('\n')
    for invoices in json_invoice['Invoices']:
        analysis.write(invoices['InvoiceNumber'] + ',' + invoices['Reference'] + ',' + invoices['Type'] + ',' + str(invoices['Total']))
        analysis.write('\n')
    analysis.close()

import pandas as pd
import matplotlib.pyplot as plt
def chart_data():
    df = pd.read_csv(r'/content/drive/My Drive/data/analysis.csv')
    pvt = df[ ['InvoiceNumber','Reference','Type','Total'] ]
    # .groupby('Type').sum()
    print(pvt)
    
    pvt.plot.bar(stacked=True)
    plt.show()

export_csv()

chart_data()

from google.colab import files
files.download('/content/drive/My Drive/data/xero_output.txt')

files.download('/content/drive/My Drive/data/analysis.csv')
